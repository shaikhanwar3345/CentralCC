***Docker***
> Docker is an open source centrailzed platform designed to create, deploy and run application
> Docker uses container on the host OS to run applications. It allows applications to use the same linux kernel as a system on the host computer, rather than creating a whole virtual OS
> We can install docker on any OS but docker engine runs natively on linux distribution
> Docker written in 'go' language
> Docker is a tool that perform OS level virtualization, also known as containerization
> Before docker, many users faces the problem that a particular code is running in the developer's system but not in the user's system
> Docker was first release in march 2013, it is developed by solomon hykes.
> Docker is a set of platform as a service that uses OS level virtualization whereso VMware uses hardware level virtualization

***Disadvantages of docker:
>Docker is a good application that rquires rich GUI
>Difficult to manage large amount of containers
>Docker does not provide cross-platform compatibility means if an application is designed to run in a docker container on windows, then it can't run on linux or vice-versa
>Docker is suitable when the development OS and testing OS are same if the OS is diffrent, we should use VM
>No solution for data recovery and backup

***Components of docker***
Docker Daemon:
 -Docker daemon runs on the host O.S
 -It is responsible for running containers to manages docker services
 -Docker daemon can communicate with other daemons
Docker Client:
 -Docker users can interact with docker daemon  through a client
 -Docker client uses commands and Rest API to communicate with the docker daemon
 -When a client runs any server command on the docker client terminal, the client terminal sends these docker commands to the docker daemon
 -It is possible for docker client to communicate with more than one daemon
Docker host
 -Docker host is used to provide an enviroment to execute and run applications. It contains the docker daemon, images, containers, networks and storages
Docker Hub/Registry
 -Docker registry manages and stores the docker images
There are two types of registries in docker
*Public Registry- Public registry is also called as docker hub
*Private registry- Private is use to store image within the enterprise
Docker Images:
 -Docker images are the read only binary template used to create docker container
 or single file with all dependecies and configuration required to run a program

****ways to create a images
.Take image from docker hub
.Create image from docker file
.Create image from existing docker containers
Docker Container
 -Container hold the entire packages that is needed to run the application
 In other words, we can say that, the images is a template and the contaimer is a copy of the template
 -Container is like a virtual machine
 -Images becomes container when they run on docker engine
